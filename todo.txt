Server:	
	- Threads communicating with clients will parse their requests,
      and pass them along to threads in a threadpool shared amongst
	  all the threads that talk to clients (protected by
      worker_pool_mutex). 

	  - define a function to parse client commands
	  - upon receiving a command, malloc a new struct to hold a pointer to the command
	  string, the socket descriptor, a program-wide unique request number, and a pointer to the return string/file
	  - Dispatcher will sort ring buffer first by priority number, then by  
	  - define the functions start_movie, stop_movie, and seek_movie
	  - Currently, the size of the buffer allocated for hostnames is a
fixed magic number "1025", might want to change

General:
-add destroy routines!
-my method of request parsing does not allow filenames with colons in
them, does not allow whitespace btw colons
- request parsing segfaults on incorrect input (atoi)

Thread Pool:
- is thread_pool_execute truly thread safe?
-Go through and add error checking to calloc's 
-Add thread_pool_destroy

Client:
	- "Main menu" should have button to create new connection,
	table/list of open connections
	-connection pane could have a table of messages going back and forth?
	- each connection pane should have associated with it a
	SwingWorker that maintains the connection from client to server
	(works with the socket)
	- connection window should log messages sent to the server/ those
	received



